name: Fetch ICON-D2 GRIB2 and Generate PNGs

on:
  schedule:
    - cron: '20 0 * * *'
    - cron: '20 4 * * *'
    - cron: '20 7 * * *'
    - cron: '20 10 * * *'
    - cron: '20 13 * * *'
    - cron: '20 16 * * *'
    - cron: '20 19 * * *'
    - cron: '20 22 * * *'
  workflow_dispatch:

jobs:
  fetch_and_generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set RUN and DATE
        run: |
          HOUR=$(date -u +%H)
          case $HOUR in
            00|01|02|03) RUN=00 ;;
            04|05|06)    RUN=03 ;;
            07|08|09)    RUN=06 ;;
            10|11|12)    RUN=09 ;;
            13|14|15)    RUN=12 ;;
            16|17|18)    RUN=15 ;;
            19|20|21)    RUN=18 ;;
            22|23)       RUN=21 ;;
          esac
          echo "RUN=$RUN" >> $GITHUB_ENV
          DATE=$(date -u +%Y%m%d)
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Install aria2
        run: sudo apt-get install -y aria2

      - name: Download all GRIB2 files (parallel with aria2c)
        run: |
          mkdir -p data/t2m data/ww data/tp
          cd data

          # t2m
          for i in $(seq -w 0 47); do
            echo "dir=t2m" >> urls.txt
            echo "https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/t_2m/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i}_2d_t_2m.grib2.bz2" >> urls.txt
          done

          # ww
          for i in $(seq -w 1 48); do
            echo "dir=ww" >> urls.txt
            echo "https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/ww/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i}_2d_ww.grib2.bz2" >> urls.txt
          done

          # tp
          for i in $(seq -w 0 47); do
            echo "dir=tp" >> urls.txt
            echo "https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/tot_prec/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i}_2d_tot_prec.grib2.bz2" >> urls.txt
          done

          # Download alles parallel
          aria2c -x 8 -s 8 -j 16 -i urls.txt
          rm urls.txt

          # Entpacken aller Dateien
          find . -name "*.bz2" -exec bunzip2 -f {} \;

      - name: Remove old PNGs of current RUN from repo
        run: |
          git rm -r --ignore-unmatch pngs/${{ env.RUN }} || true

      - name: Generate PNGs
        run: |
          python scripts/generate_pngs.py data/t2m pngs/${{ env.RUN }}/t2m t2m
          python scripts/generate_pngs.py data/ww pngs/${{ env.RUN }}/ww ww
          python scripts/generate_pngs.py data/tp pngs/${{ env.RUN }}/tp tp

      - name: Commit PNGs
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

          git add pngs/${{ env.RUN }}/t2m/* || true
          git add pngs/${{ env.RUN }}/ww/* || true
          git add pngs/${{ env.RUN }}/tp/* || true

          git commit -m "Update ICON-D2 run ${{ env.RUN }} for ${{ env.DATE }}" || echo "Keine Ã„nderungen zum Commit"
          git push
