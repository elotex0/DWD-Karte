name: Fetch ICON-D2 GRIB2 and Generate PNGs

on:
  schedule:
    - cron: '0 2 * * *'
    - cron: '0 5 * * *'
    - cron: '0 8 * * *'
    - cron: '0 11 * * *'
    - cron: '0 14 * * *'
    - cron: '0 17 * * *'
    - cron: '0 20 * * *'
    - cron: '0 23 * * *'
  workflow_dispatch:

jobs:
  fetch_and_generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install cfgrib xarray matplotlib cartopy geopandas shapely pandas

      - name: Set RUN and DATE
        run: |
          case "$(date -u +%H)" in
            "02") echo "RUN=00" >> $GITHUB_ENV ;;
            "05") echo "RUN=03" >> $GITHUB_ENV ;;
            "10") echo "RUN=06" >> $GITHUB_ENV ;;
            "11") echo "RUN=09" >> $GITHUB_ENV ;;
            "14") echo "RUN=12" >> $GITHUB_ENV ;;
            "17") echo "RUN=15" >> $GITHUB_ENV ;;
            "20") echo "RUN=18" >> $GITHUB_ENV ;;
            "23") echo "RUN=21" >> $GITHUB_ENV ;;
          esac
          DATE=$(date -u +%Y%m%d)
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Clean old PNGs
        run: rm -rf pngs/* || true

      - name: Download t2m GRIB2 files
        run: |
          mkdir -p data/t2m
          cd data/t2m
          for i in $(seq 0 47); do
            i_padded=$(printf "%03d" $i)
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/t_2m/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_t_2m.grib2.bz2"
            wget -O t2m_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "t2m_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f t2m_${i_padded}.grib2.bz2
            fi
          done

      - name: Download ww GRIB2 files
        run: |
          mkdir -p data/ww
          cd data/ww
          for i in $(seq 1 48); do
            i_padded=$(printf "%03d" $i)
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/ww/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_ww.grib2.bz2"
            wget -O ww_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "ww_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f ww_${i_padded}.grib2.bz2
            fi
          done

      - name: Generate PNGs
        run: |
          python scripts/generate_pngs.py data/t2m pngs/${{ env.RUN }}/t2m t2m
          python scripts/generate_pngs.py data/ww pngs/${{ env.RUN }}/ww ww

      - name: Clean GRIB2 files
        run: rm -rf data/*

      - name: Commit PNGs
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add pngs/${{ env.RUN }}/t2m/* || true
          git add pngs/${{ env.RUN }}/ww/* || true
          git commit -m "Update ICON-D2 run ${{ env.RUN }} for ${{ env.DATE }}" || echo "Keine Änderungen zum Commit"
          git push
