name: Fetch ICON-D2 GRIB2 and Generate PNGs

on:
  schedule:
    - cron: '20 0 * * *'
    - cron: '20 4 * * *'
    - cron: '20 7 * * *'
    - cron: '20 10 * * *'
    - cron: '20 13 * * *'
    - cron: '20 16 * * *'
    - cron: '20 19 * * *'
    - cron: '20 22 * * *'
  workflow_dispatch:

jobs:
  fetch_grib2:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.set_env.outputs.run }}
      date: ${{ steps.set_env.outputs.date }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set RUN and DATE
        id: set_env
        run: |
          HOUR=$(date -u +%H)
          case $HOUR in
            00|01|02|03) RUN=00 ;;
            04|05|06) RUN=03 ;;
            07|08|09) RUN=06 ;;
            10|11|12) RUN=09 ;;
            13|14|15) RUN=12 ;;
            16|17|18) RUN=15 ;;
            19|20|21) RUN=18 ;;
            22|23) RUN=21 ;;
          esac
          DATE=$(date -u +%Y%m%d)
          echo "RUN=$RUN" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV
          echo "::set-output name=run::$RUN"
          echo "::set-output name=date::$DATE"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download t2m GRIB2 files
        run: |
          mkdir -p data/t2m
          cd data/t2m
          seq 0 47 | xargs -n 1 -P 8 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/t_2m/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_t_2m.grib2.bz2"
            wget -O t2m_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "t2m_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f t2m_${i_padded}.grib2.bz2
            fi
          '

      - name: Download ww GRIB2 files
        run: |
          mkdir -p data/ww
          cd data/ww
          seq 1 48 | xargs -n 1 -P 8 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/ww/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_ww.grib2.bz2"
            wget -O ww_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "ww_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f ww_${i_padded}.grib2.bz2
            fi
          '

      - name: Download tp GRIB2 files
        run: |
          mkdir -p data/tp
          cd data/tp
          seq 0 47 | xargs -n 1 -P 8 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/tot_prec/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_tot_prec.grib2.bz2"
            wget -O tot_prec_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "tot_prec_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f tot_prec_${i_padded}.grib2.bz2
            fi
          '

      - name: Remove old PNGs of current RUN from repo
        run: |
          git rm -r --ignore-unmatch pngs/${{ env.RUN }} || true

  generate_pngs:
    needs: fetch_grib2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [t2m, ww, tp]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt
      - run: python scripts/generate_pngs.py data/${{ matrix.type }} pngs/${{ needs.fetch_grib2.outputs.run }}/${{ matrix.type }} ${{ matrix.type }}

  commit_pngs:
    needs: generate_pngs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Commit PNGs
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add pngs/* || true
          git commit -m "Update ICON-D2 run ${{ needs.fetch_grib2.outputs.run }} for ${{ needs.fetch_grib2.outputs.date }}" || echo "Keine Änderungen zum Commit"
          git push
